{"version":3,"sources":["components/Loading.js","components/SelectComponent.js","pages/Nasa.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","Loading","classes","className","CircularProgress","select","margin","minWidth","SelectComponent","label","menuItems","value","setOnChange","FormControl","variant","InputLabel","id","Select","labelId","onChange","e","target","map","MenuItem","formControl","alert","marginBottom","flexDirection","flexWrap","justifyContent","alignItems","paper","padding","textAlign","color","palette","text","secondary","Nasa","useState","isLoading","setIsLoading","erro","setErro","show","setShow","antes","setAntes","depois","setDepois","lat","setLat","lon","setLon","coords","setCoords","dim","setDim","location","setLocation","useCoords","a","apiNasaKey","dataHoje","Date","dataAntesUrl","getFullYear","getMonth","getDate","urlAntes","urlDepois","geoUrl","encodeURIComponent","fetch","then","response","json","data","console","log","rate","remaining","results","formatted","geometry","lng","catch","err","message","url","status","length","useEffect","getDadosNasaAPI","Typography","component","Box","letterSpacing","m","fontSize","fontWeight","onSubmit","preventDefault","TextField","type","required","String","parseFloat","Button","onClick","navigator","geolocation","getCurrentPosition","position","latitude","longitude","Divider","Alert","severity","href","rel","Grid","container","item","Paper","src","alt","width","App","temaDark","setTemaDark","check","setCheck","tipoPaleta","corPrimaria","orange","blue","corSecundaria","deepOrange","lightBlue","tema","createMuiTheme","primary","main","responsiveFontSizes","Container","FormGroup","style","FormControlLabel","control","Switch","size","checked","inputProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93e7876e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\nexport default function SelectComponent({ label, menuItems, value, setOnChange }){\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={classes.select}>\r\n        <InputLabel id={label}>{label}</InputLabel>\r\n        <Select\r\n            labelId={label}\r\n            id={label}\r\n            value={value}\r\n            onChange={e => setOnChange(e.target.value)}\r\n            label={label}\r\n        >\r\n            {menuItems.map(e => <MenuItem key={e} value={e}>{e}</MenuItem>)}\r\n        </Select>\r\n    </FormControl>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { makeStyles, Paper, Grid, Divider, TextField, Button, Typography, Box } from '@material-ui/core'\r\n\r\nimport Loading from '../components/Loading'\r\nimport SelectComponent from '../components/SelectComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n    alert: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    root: {\r\n        marginBottom: theme.spacing(10),\r\n        margin: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nexport default function Nasa() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [erro, setErro] = useState('')\r\n    const [show, setShow] = useState(false) // controla visibilidade da comparação das imagens\r\n    const [antes, setAntes] = useState('') // url da imagem retornada pela api da nasa, url da img antiga e mais atual\r\n    const [depois, setDepois] = useState('')\r\n    const [lat, setLat] = useState('') // lat\r\n    const [lon, setLon] = useState('') // lon\r\n    const [coords, setCoords] = useState([]) // lon\r\n    const [dim, setDim] = useState(0.25) // dimension\r\n    const [location, setLocation] = useState('') // localização da lat/lon\r\n\r\n    const dimValues = [0.15, 0.25, 0.35]\r\n\r\n    useEffect(() => {\r\n        if (coords.length > 0) {\r\n            setLat(coords[0])\r\n            setLon(coords[1])\r\n            getDadosNasaAPI(coords)\r\n        }\r\n    }, [coords])\r\n\r\n    async function getDadosNasaAPI(useCoords) {\r\n\r\n        setShow(false)\r\n        setIsLoading(true)\r\n        setErro('')\r\n\r\n        let apiNasaKey = 'MbPaC6mbQWE42cZGxocdhII1A0H4ndoWFbPtKdQ8'\r\n        let apiGeoKey = 'ebc49eaaebd44cebb53f0f9e453983de'\r\n\r\n        let dataHoje = new Date()\r\n        let dataAntesUrl = (dataHoje.getFullYear()-3) + \"-\" + (dataHoje.getMonth()+1) + \"-\" + dataHoje.getDate()\r\n\r\n        let urlAntes = `https://api.nasa.gov/planetary/earth/imagery?lon=${useCoords[1]}&lat=${useCoords[0]}&date=${dataAntesUrl}&dim=${dim}&api_key=${apiNasaKey}`\r\n\r\n        let urlDepois = `https://api.nasa.gov/planetary/earth/imagery?lon=${useCoords[1]}&lat=${useCoords[0]}&dim=${dim}&api_key=${apiNasaKey}` // The response will include the date and URL to the image that is closest to the supplied date. If not supplied, then the most recent image (i.e., closest to today) is returned \r\n\r\n        let geoUrl = `https://api.opencagedata.com/geocode/v1/json?key=${apiGeoKey}&q=${encodeURIComponent(useCoords[0] + ',' + useCoords[1])}&pretty=1&no_annotations=1`\r\n\r\n        await fetch(geoUrl)\r\n            .then(async response => {\r\n                await response.json().then(data => {\r\n                    console.log('OpenCage Geocoder limit:', data.rate.remaining)\r\n                    setLocation(\r\n                        `Localização aproximada encontrada: ${data.results[0].formatted}, \r\n                        Coordenadas: (${data.results[0].geometry.lat}, ${data.results[0].geometry.lng})`\r\n                    )\r\n                })\r\n            })\r\n            .catch(function (err) { setErro(`Houve um erro: ${err.message}`) })\r\n\r\n        await fetch(urlAntes)\r\n            .then(response => {\r\n                setAntes(response.url)\r\n                if (response.status !== 200) {\r\n                    setAntes('')\r\n                    setErro('')\r\n                }\r\n            })\r\n            .catch(function (err) { setErro(`Houve um erro: ${err.message}`) })\r\n\r\n        await fetch(urlDepois)\r\n            .then(response => {\r\n                setDepois(response.url)\r\n                if (response.status !== 200) {\r\n                    setDepois('')\r\n                    setErro('')\r\n                }\r\n            })\r\n            .catch(function (err) { setErro(`Houve um erro: ${err.message}`) })\r\n\r\n        if (erro.length > 0) {\r\n            setShow(false)\r\n        }\r\n        else {\r\n            setShow(true)\r\n        }\r\n        setIsLoading(false)\r\n\r\n    }\r\n\r\n    async function getExampleCoords() {\r\n        setCoords([-11.8613, -56.3207])\r\n    }\r\n\r\n    function getBrowserCoords() {\r\n        if (!('geolocation' in navigator)) {\r\n            alert(\"Navegador não tem suporte API Geolocation\");\r\n        }\r\n        else {\r\n            navigator.geolocation.getCurrentPosition(function (position) {\r\n                let latitude = position.coords.latitude\r\n                let longitude = position.coords.longitude\r\n                setCoords([latitude, longitude])\r\n            });\r\n        }\r\n    }\r\n\r\n    function getInputCoords(e) {\r\n        e.preventDefault()\r\n        setCoords([lat, lon])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Typography component=\"div\">\r\n                <Box letterSpacing={6} m={1} fontSize=\"h2.fontSize\" textAlign=\"center\" fontWeight=\"fontWeightBold\">\r\n                    NASA Satellite - Earth API\r\n                </Box>\r\n            </Typography>\r\n\r\n            <form onSubmit={getInputCoords} >\r\n                <TextField id=\"standard-full-width\"\r\n                    label=\"Latitude\"\r\n                    type=\"number\"\r\n                    required\r\n                    className={classes.formControl}\r\n                    value={String(lat)}\r\n                    onChange={(e) => setLat(parseFloat(e.target.value))}\r\n                />\r\n                <TextField id=\"standard-full-width\"\r\n                    label=\"Longitude\"\r\n                    type=\"number\"\r\n                    required\r\n                    className={classes.formControl}\r\n                    value={String(lon)}\r\n                    onChange={(e) => setLon(parseFloat(e.target.value))}\r\n                />\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    type='submit'\r\n                    className={classes.formControl}\r\n                >Executar</Button>\r\n\r\n\r\n                <Button variant=\"outlined\" onClick={getExampleCoords} className={classes.formControl}>Exemplo</Button>\r\n                <Button variant=\"outlined\" onClick={getBrowserCoords} className={classes.formControl}>Minha localização aproximada</Button>\r\n\r\n            </form>\r\n\r\n            <SelectComponent label={\"Dimensão\"} menuItems={dimValues} value={dim} setOnChange={setDim} />\r\n            <Divider />\r\n\r\n            {isLoading && <Loading />}\r\n\r\n            {erro.length > 0 && <Alert severity=\"error\" className={classes.alert}>{erro}</Alert>}\r\n\r\n            {\r\n                !isLoading && !erro.length > 0 && show &&\r\n\r\n                <>\r\n                    <Alert severity=\"info\" className={classes.alert}>\r\n                        {location}. Fonte: <a href='https://opencagedata.com/api' target=\"_blank\" rel=\"noopener noreferrer\">https://opencagedata.com/api</a>\r\n                    </Alert>\r\n\r\n                    <Alert severity=\"info\" className={classes.alert}>\r\n                        Fonte das imagens: <a href='https://api.nasa.gov/' target=\"_blank\" rel=\"noopener noreferrer\">https://api.nasa.gov/</a>\r\n                    </Alert>\r\n\r\n                    <Grid container spacing={3} className={classes.root}>\r\n\r\n                        <Grid item>\r\n                            <Paper className={classes.paper}>\r\n                                <figure>\r\n                                    {\r\n                                        antes.length > 0 &&\r\n                                        <>\r\n                                            <a href={antes} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src={antes} alt={'Antes'} width={'400px'} />\r\n                                            </a>\r\n                                            <figcaption>Antes</figcaption>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        antes.length === 0 &&\r\n                                        <figcaption>Não foi possível encontrar uma imagem.</figcaption>\r\n                                    }\r\n                                </figure>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Paper className={classes.paper}>\r\n                                <figure>\r\n                                    {\r\n                                        depois.length > 0 &&\r\n                                        <>\r\n                                            <a href={depois} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                <img src={depois} alt={'Depois'} width={'400px'} />\r\n                                            </a>\r\n                                            <figcaption>Imagem mais recente</figcaption>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        depois.length === 0 &&\r\n                                        <figcaption>Não foi possível encontrar uma imagem.</figcaption>\r\n                                    }\r\n                                </figure>\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css'\n\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  MuiThemeProvider,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n  Container,\n} from '@material-ui/core'\nimport { deepOrange, orange, lightBlue, blue } from '@material-ui/core/colors' // cores\nimport CssBaseLine from '@material-ui/core/CssBaseLine' // ajuste navegadores antigos\n\nimport Nasa from './pages/Nasa'\n\nfunction App() {\n\n  const [temaDark, setTemaDark] = useState(false)\n  const [check, setCheck] = useState(false)\n  const tipoPaleta = temaDark ? 'dark' : 'light'\n  const corPrimaria = temaDark ? orange[500] : blue[500]\n  const corSecundaria = temaDark ? deepOrange[900] : lightBlue[400]\n  let tema = createMuiTheme({\n    palette: {\n      type: tipoPaleta,\n      primary: { main: corPrimaria },\n      secondary: { main: corSecundaria }\n    }\n  })\n  tema = responsiveFontSizes(tema) // reduz de acordo com tela\n\n  function handleTheme() {\n    setTemaDark(!temaDark)\n    setCheck(!check)\n  }\n\n  return (\n    <Container>\n      <MuiThemeProvider theme={tema}>\n        <CssBaseLine />\n        <FormGroup style={{ 'marginLeft': '20px', 'color': 'grey' }}>\n          <FormControlLabel\n            control={<Switch size=\"small\" checked={check} onChange={handleTheme} color=\"primary\" inputProps={{ 'aria-label': 'primary checkbox' }} />}\n            label={\"Tema \" + tipoPaleta}\n          />\n        </FormGroup>\n        <Nasa />\n      </MuiThemeProvider>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}